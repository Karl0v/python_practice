#text = 'Я не знав )куди йти (втім недавно, тому піщов ...'
text = 'Ми дуже довго ходили(десь чотири години), тому стомилися'

#text = 'Він дуже сміявся, тож я здивувася'

def find_text(text):
    find_left = text.find('(') #находим индекс открывающей скобки
    find_right = text.find(')') + 1 #находим индекс закрывающей скобки
    if find_left != -1 and find_right != 0: #если открывающие скобки находятся в начале а закрывающие в конце
        #text_one = text[:find_left]
        #text_two = text[find_right:]
        return text[:find_left] + text[find_right:] #выводим строку без текста в скобках
    else:
        return text #если первое условие не может быть выполнено выводим строку без изменений


#print(find_text(text))

def find_many_text(text, query): #функция принимает текст и символ который нужно найти в этом тексте
    indexes_found = list() #оглашаем переменную списком для дальнейшего сохранения в него индекса найденого символа
    current_index = text.find(query) #переменная которая находит первый найденный символ
    while current_index != -1: # обьявлен цикл для поиска символа до конца текста
        indexes_found.append(current_index) #фиксация и добавляет в список успешный результат
        current_index = text.find(query, current_index +1)# переменная которая начинает поиск символа с предыдущего найденого символа

    return indexes_found #возвращает список индексов найденых символов


#print(find_many_text(text, 'и'))

text = 'Він дуже) сміявся(хоча причинини не було), тож (я) здивувася(дуже) добре ('
def find_many_bracket(text):# функция принимает текст для удаления текста В скобках
    indexes_found = list() # оглашаем переменную1 списком для фиксации индексов скобок
    current_index = text.find('(') #переменная2 которая ищет открытые скобки
    current_symbol = ')' #переменная3 которая обозначает закрытые скобки
    new_text = str() #переменная4 оглашена строкой для сохранения текста без текста в скобках
    while current_index != -1: #цикл который будет искать скобки до конца строки
        if current_symbol == '(': #условие1 если переменная3 равна открытым скобкам
            indexes_found.append(current_index + 1) #добавляем найденный индекс открытых скобок в тексте в список переменной1
            current_index = text.find(current_symbol, current_index + 1) #переменная2 начинает поиск символа с предыдущего найденого символа
            current_symbol = ')' #после выполненых операций переменная3 обозначает закрытые скобки
        else:#если условие один не возможно выполнить
            indexes_found.append(current_index)#добавляем найденный индекс закрытых скобок в тексте в список переменной1
            current_index = text.find(current_symbol, current_index + 1) #переменная2 начинает поиск символа с предыдущего найденого символа
            current_symbol = '(' #после выполненых операций переменная3 обозначает закрытые скобки
    if len(indexes_found) % 2 != 0:  #условие внн цикла проверяет или четное количество список индексов в переменной1
        indexes_found = indexes_found[:-1] #
    indexes_found = [0] + indexes_found + [len(text)] #обьявляем количество индексов в переменной1
    i = 0 #переменная5 равна нулю
    while i < len(indexes_found): #цикл продолжаеться до конца спика переменной1
        mini_text = text[indexes_found[i]: indexes_found[i + 1]] #переменная6 ищит отрезки текста до открытых скобок и после закрытых скобок
        i +=2
        new_text += mini_text #переменная4 собирает отрезки текста с переменной6
    
    return new_text #возращает строку с удаленым текст В скобках



#print(find_many_bracket(text))





